/*
 * Copyright 2022 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.kie.dar.common.api.io;

import org.kie.dar.common.api.exceptions.KieDARCommonException;

import java.io.File;
import java.net.URI;


/**
 * This specific <code>File</code> is meant to contain the index of the classes generated by a <b>compiler-plugin</b>
 */
public final class IndexFile extends File {

    public static final String FINAL_SUFFIX = "_json";

    static String validatePathName(String toValidate) {
        String fileName = getFileName(toValidate);
        if (!fileName.endsWith(FINAL_SUFFIX)) {
            throw new KieDARCommonException("Wrong file name " + fileName);
        }
        String model = getModel(fileName);
        if (model.isEmpty()) {
            throw new KieDARCommonException("Wrong file name " + fileName);
        }
        return toValidate;
    }

    static URI validateURI(URI toValidate) {
        validatePathName(toValidate.getPath());
        return toValidate;
    }

    static String getFileName(String source) {
        return source.contains(File.separator) ?
                source.substring(source.lastIndexOf(File.separatorChar) + 1) : source;
    }

    static String getModel(String fileName) {
        return getSuffix(fileName).replace(FINAL_SUFFIX, "");
    }

    static String getSuffix(String fileName) {
        return fileName.substring(fileName.lastIndexOf('.') + 1);
    }

    public IndexFile(String pathname) {
        super(validatePathName(pathname));
    }

    public IndexFile(String parent, String child) {
        super(parent, validatePathName(child));
    }

    public IndexFile(File parent, String child) {
        super(parent, validatePathName(child));
    }

    public IndexFile(URI uri) {
        super(validateURI(uri));
    }

    public String getModel() {
        return getModel(getSuffix());
    }

    private String getSuffix() {
        return getSuffix(this.getName());
    }

}
